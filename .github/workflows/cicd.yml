name: Build and Push Docker Image to TCR

on:
  push:
    branches: [ main ]

env:
  REGISTRY: kaimen.tencentcloudcr.com
  IMAGE_NAME: management.platform.backend/kaimen-admin-backend


jobs:
  build-and-push:
    runs-on: ["self-hosted", "HK"]
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Tencent Cloud TCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.TCR_USERNAME }}
          password: ${{ secrets.TCR_PASSWORD }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'push' }}  
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Set IMAGE_TAG environment variable
        run: |
          # 取 metadata action 输出的最后一行 commit tag
          TAG=$(echo "${{ steps.meta.outputs.tags }}" | tail -n1)
          echo "IMAGE_TAG=$TAG" >> $GITHUB_ENV

      - name: Update Helm values.yaml with commit tag
        run: |
          echo "Updating charts/kaimen-backend/values.yaml with image tag $IMAGE_TAG"
          yq e ".image.tag = \"${IMAGE_TAG##*:}\"" -i charts/kaimen-backend/values.yaml

      - name: Commit updated values.yaml (skip CI)
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add charts/kaimen-backend/values.yaml
          git commit -m "Update kaimen-backend image tag to ${IMAGE_TAG##*:} [skip ci]" || echo "No changes to commit"
          git push origin main
          
  deploy-to-tke:
    name: Deploy to TKE
    needs: build-and-push
    if: ${{ success() }}
    runs-on: ["self-hosted", "HK"]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'v3.14.0'

      - name: Configure KUBECONFIG from secret
        run: |
          # 写入临时文件
          echo "${{ secrets.KUBECONFIG }}" > /tmp/kubeconfig
          # 强制将 user 和 name 转为字符串
          yq e '(.contexts[].context.user) |= tostring | (.users[].name) |= tostring' -i /tmp/kubeconfig
          # 安装到标准位置
          mkdir -p $HOME/.kube
          mv /tmp/kubeconfig $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Verify kubectl connection
        run: kubectl cluster-info

      - name: Deploy with Helm
        run: |
          helm upgrade --install kaimen-admin-backend ./charts/kaimen-backend \
            --namespace kaimen-admin-backend --create-namespace \
            --set secrets.MYSQL_USER=${{ secrets.MYSQL_USER }} \
            --set secrets.MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
            --set secrets.MYSQL_HOST=${{ secrets.MYSQL_HOST }} \
            --set secrets.MYSQL_PORT=${{ secrets.MYSQL_PORT }} \
            --set secrets.MYSQL_DB=${{ secrets.MYSQL_DB }} \
            --set imagepullSecrets.TCR_USERNAME=${{ secrets.TCR_USERNAME }} \
            --set imagepullSecrets.TCR_PASSWORD=${{ secrets.TCR_PASSWORD }} \
            --set config.SECRET_KEY=${{ secrets.SECRET_KEY }}
