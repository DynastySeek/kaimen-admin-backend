name: Build and Deploy

on:
  push:
    branches: [ main, develop ]

env:
  REGISTRY: kaimen-hk.tencentcloudcr.com
  IMAGE_NAME: management.platform.backend/kaimen-admin-backend

jobs:
  build-and-push:
    # 所有分支都构建
    runs-on: ["self-hosted", "HK"]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # 自动检出当前分支（main 或 develop）

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Tencent Cloud TCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.TCR_USERNAME }}
          password: ${{ secrets.TCR_PASSWORD }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/develop' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Extract primary tag
        run: |
          FULL_IMAGE=$(echo "${{ steps.meta.outputs.tags }}" | tail -n1)
          TAG="${FULL_IMAGE##*:}"
          echo "IMAGE_TAG=$TAG" >> $GITHUB_ENV
          echo "Primary tag: $TAG"
      
      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'v3.14.0'
      
      - name: Configure KUBECONFIG from secret
        run: |
          echo "${{ secrets.KUBECONFIG }}" > /tmp/kubeconfig
          yq e '(.contexts[].context.user) |= tostring | (.users[].name) |= tostring' -i /tmp/kubeconfig
          mkdir -p $HOME/.kube
          mv /tmp/kubeconfig $HOME/.kube/config
          chmod 600 $HOME/.kube/config
    
      - name: Verify kubectl connection
        run: kubectl cluster-info
      
      - name: Deploy to Dev Environment
        if: ${{ github.ref == 'refs/heads/develop' }}
        run: |
          helm upgrade --install kaimen-admin-backend-dev ./charts/kaimen-backend \
            --namespace kaimen-admin-dev --create-namespace \
            --set image.tag=${{ env.IMAGE_TAG }} \
            --set-string config.ENVIRONMENT=development \
            --set-string secrets.MYSQL_USER=${{ secrets.MYSQL_USER }} \
            --set-string secrets.MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
            --set-string secrets.MYSQL_HOST=${{ secrets.MYSQL_HOST }} \
            --set secrets.MYSQL_PORT=${{ secrets.MYSQL_PORT }} \
            --set-string secrets.MYSQL_DB='${{ secrets.MYSQL_TEST_DB }}' \
            --set-string imagePullSecrets.username=${{ secrets.TCR_USERNAME }} \
            --set-string imagePullSecrets.password=${{ secrets.TCR_PASSWORD }} \
            --set config.SECRET_KEY=${{ secrets.SECRET_KEY }} \
            --set-string config.COS_SECRET_ID=${{ secrets.COS_SECRET_ID }} \
            --set-string config.COS_SECRET_KEY=${{ secrets.COS_SECRET_KEY }} \
            --set-string config.COS_REGION=${{ secrets.COS_REGION }} \
            --set-string config.COS_BUCKET=${{ secrets.COS_BUCKET }} \
            --set-string config.REDIS_HOST=${{ secrets.REDIS_HOST }} \
            --set secrets.REDIS_PORT=${{ secrets.REDIS_PORT }} \
            --set-string config.REDIS_USER=${{ secrets.REDIS_USER }} \
            --set-string config.REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} \
            --set secrets.REDIS_DB=${{ secrets.REDIS_DB }} \
            --set-string config.TENCENT_CLOUD_SECRET_ID=${{ secrets.TENCENT_CLOUD_SECRET_ID }} \
            --set-string config.TENCENT_CLOUD_SECRET_KEY=${{ secrets.TENCENT_CLOUD_SECRET_KEY }} \
            --set-string config.SMS_SDK_APP_ID=${{ secrets.SMS_SDK_APP_ID }} \
            --set-string config.SMS_REGION=${{ secrets.SMS_REGION }} \
            --set-string config.SMS_SIGN_NAME=${{ secrets.SMS_SIGN_NAME }}

      - name: Deploy to Prod Environment
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          helm upgrade --install kaimen-admin-backend ./charts/kaimen-backend \
            --namespace kaimen-admin --create-namespace \
            --set image.tag=${{ env.IMAGE_TAG }} \
            --set-string config.ENVIRONMENT=production \
            --set-string secrets.MYSQL_USER='${{ secrets.MYSQL_USER }}' \
            --set-string secrets.MYSQL_PASSWORD='${{ secrets.MYSQL_PASSWORD }}' \
            --set-string secrets.MYSQL_HOST='${{ secrets.MYSQL_HOST }}' \
            --set secrets.MYSQL_PORT=${{ secrets.MYSQL_PORT }} \
            --set-string secrets.MYSQL_DB='${{ secrets.MYSQL_DB }}' \
            --set-string imagePullSecrets.username=${{ secrets.TCR_USERNAME }} \
            --set-string imagePullSecrets.password=${{ secrets.TCR_PASSWORD }} \
            --set config.SECRET_KEY=${{ secrets.SECRET_KEY }} \
            --set-string config.COS_SECRET_ID=${{ secrets.COS_SECRET_ID }} \
            --set-string config.COS_SECRET_KEY=${{ secrets.COS_SECRET_KEY }} \
            --set-string config.COS_REGION=${{ secrets.COS_REGION }} \
            --set-string config.COS_BUCKET=${{ secrets.COS_BUCKET }} \
            --set-string config.REDIS_HOST=${{ secrets.REDIS_HOST }} \
            --set secrets.REDIS_PORT=${{ secrets.REDIS_PORT }} \
            --set-string config.REDIS_USER=${{ secrets.REDIS_USER }} \
            --set-string config.REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} \
            --set secrets.REDIS_DB=${{ secrets.REDIS_DB }} \
            --set-string config.TENCENT_CLOUD_SECRET_ID=${{ secrets.TENCENT_CLOUD_SECRET_ID }} \
            --set-string config.TENCENT_CLOUD_SECRET_KEY=${{ secrets.TENCENT_CLOUD_SECRET_KEY }} \
            --set-string config.SMS_SDK_APP_ID=${{ secrets.SMS_SDK_APP_ID }} \
            --set-string config.SMS_REGION=${{ secrets.SMS_REGION }} \
            --set-string config.SMS_SIGN_NAME=${{ secrets.SMS_SIGN_NAME }}
