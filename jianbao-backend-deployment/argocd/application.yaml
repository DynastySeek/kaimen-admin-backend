# ArgoCD 应用配置
# 定义如何从Git仓库部署到K8s集群

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: jianbao-backend
  namespace: argocd
  labels:
    app: jianbao-backend
    env: production
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  # 项目配置
  project: default
  
  # Git仓库源配置
  source:
    repoURL: https://github.com/DynastySeek/kaimen-backend.git
    targetRevision: main
    path: k8s
    
    # Helm配置（如果使用Helm）
    # helm:
    #   valueFiles:
    #   - values-prod.yaml
    
  # 目标集群配置
  destination:
    server: https://kubernetes.default.svc
    namespace: jianbao-system
    
  # 同步策略
  syncPolicy:
    # 自动同步配置
    automated:
      prune: true          # 自动删除不再存在的资源
      selfHeal: true       # 自动修复配置漂移
      allowEmpty: false    # 不允许空的同步
      
    # 同步选项
    syncOptions:
    - CreateNamespace=true     # 自动创建命名空间
    - PrunePropagationPolicy=foreground
    - PruneLast=true          # 最后执行删除操作
    - ApplyOutOfSyncOnly=true # 仅应用不同步的资源
    
    # 重试策略
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
        
  # 健康检查配置
  ignoreDifferences:
  - group: apps
    kind: Deployment
    jsonPointers:
    - /spec/replicas
    
  # 通知配置
  revisionHistoryLimit: 10
  
---
# ArgoCD项目配置
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: jianbao-project
  namespace: argocd
  labels:
    project: jianbao
spec:
  description: "鉴宝项目应用管理"
  
  # 源仓库白名单
  sourceRepos:
  - 'https://github.com/DynastySeek/kaimen-backend.git'
  - 'https://github.com/DynastySeek/*'
  
  # 目标集群和命名空间白名单
  destinations:
  - namespace: 'jianbao-system'
    server: https://kubernetes.default.svc
  - namespace: 'jianbao-*'
    server: https://kubernetes.default.svc
    
  # 允许的集群资源
  clusterResourceWhitelist:
  - group: ''
    kind: Namespace
  - group: 'rbac.authorization.k8s.io'
    kind: ClusterRole
  - group: 'rbac.authorization.k8s.io'
    kind: ClusterRoleBinding
    
  # 允许的命名空间资源
  namespaceResourceWhitelist:
  - group: ''
    kind: ConfigMap
  - group: ''
    kind: Secret
  - group: ''
    kind: Service
  - group: ''
    kind: ServiceAccount
  - group: 'apps'
    kind: Deployment
  - group: 'apps'
    kind: StatefulSet
  - group: 'apps'
    kind: DaemonSet
  - group: 'networking.k8s.io'
    kind: Ingress
  - group: 'networking.k8s.io'
    kind: NetworkPolicy
    
  # RBAC策略
  roles:
  - name: admin
    description: "项目管理员"
    policies:
    - p, proj:jianbao-project:admin, applications, *, jianbao-project/*, allow
    - p, proj:jianbao-project:admin, repositories, *, *, allow
    - p, proj:jianbao-project:admin, certificates, *, *, allow
    groups:
    - jianbao:admin
    
  - name: developer
    description: "开发人员"
    policies:
    - p, proj:jianbao-project:developer, applications, get, jianbao-project/*, allow
    - p, proj:jianbao-project:developer, applications, sync, jianbao-project/*, allow
    groups:
    - jianbao:developer